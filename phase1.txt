Team 34--

This project was bootstrapped with React. To run it please open the terminal and cd into my-app directory. 
To ensure your machine has the required modules necessary to run the app, please type npm install in the terminal, 
and once all modules have finished installing, type npm start.
Now that the app is running, if it is not automatically loaded you can open [http://localhost:3000] to view it in the browser.

ShareNear is a web application service that allows its user to put up listings of items they want to rent out, and interact
with other users to rent their items as well. 

Demo to use the current version of our app-

1. The app begins on the home page. Please click on the login button on the top right of the navigation bar to be taken to the 
login page. A first time user would click on the sign up button at the bottom of the login form to be taken to a sign up page,
where they would then fill out their information and sign up appropriately. Since this is only phase 1, our app does not store
sign up data anywhere, so the sign up page isn't functional. You can click back on the login button at the bottom to be taken
back to the login page. In our phase 2 we will store the list of users in a database, and push to it when new user signs up.
Then we can read from there to check user authentication/authorization.

2. From here you can login using username: user, password: user if you want to login as a regular user. Or you can 
login using username: admin, password: admin, to login as an admin. Once logged in, you will be brought back to the home page.

3. Now that you are logged in, the navbar gives you the option of viewing your profile, and/or logging out. There is 
also the option to search for items or filter by location with the search bar at the top. Currently, to use the search button
please type Toronto in the location bar, and click the search icon. This will show a filtered version of the items that have 
locations based in Toronto. Other than this, the search bar is currently not functional. 

4. A logged in user can browse the items currently listed for rent, and click on each see item button to learn more 
details about the item. Please click to see an item that you are interested in, and you will be taken to a single item page
that lists more details about the specific item up for rent. 

5. If a user is interested in renting the item, they can click the "rent this item" button, and they will be taken to a
profile page of the user who created the post. Doing so allows you view the contact details of this other user, and 
thus facilitate communication to begin the rental transaction. 

6. The next thing a user can do, assuming they are logged in, is that they can click on their view profile button on the navbar.
If you click there now you will see a hardcoded profile for the user already set up, which we will make more dynamic in 
phase 2. The user can view their profile, and can do one of 2 things from here, either edit their profile, or create a new
listing to post.

7. If you click to edit profile, the user is taken to a form page to fill out their information. This part is currently not 
functional, but pressing submit will take the user back to their profile page. 

8. If you click the create new listing button, then the user is taken to a listings form to fill out information about the 
item they have put up for rent. Right now this item doesn't get saved, but submitting it will edit the DOM to print out the
new item created. 

9. Aside from these interactions, a user can log out, and will be taken back to the home page, where they can browse items
up for rent even without an account. These types of users are only not given access to any of their own profile features.

10. Finally, if you log in as an admin, the admin has all the same views as a regular user, but also currently has the option
to see the list and information of all other users who have an account on the application, and they can access this through
the navigation bar once logged in as well.  
